<!DOCTYPE web-app PUBLIC
 "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
 "http://java.sun.com/dtd/web-app_2_3.dtd" >

<web-app xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
          http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
         version="3.0">

  <display-name>NunaLiveChat</display-name>

  <!--welcome pages-->
  <welcome-file-list>
    <welcome-file>index.jsp</welcome-file>
  </welcome-file-list>

  <error-page>
    <error-code>404</error-code>
    <location>/WEB-INF/views/error/404.html</location>
  </error-page>

  <!-- 内部服务器错误 -->
  <error-page>
    <error-code>500</error-code>
    <location>/WEB-INF/views/error/500.html</location>
  </error-page>

  <!-- 请求的 uri 太长 -->
  <error-page>
    <error-code>414</error-code>
    <location>/WEB-INF/views/error/414.html</location>
  </error-page>

  <!-- HTTP 版本不受支持 -->
  <error-page>
    <error-code>505</error-code>
    <location>/WEB-INF/views/error/505.html</location>
  </error-page>

  <!-- 请求无效 -->
  <error-page>
    <error-code>400</error-code>
    <location>/WEB-INF/views/error/400.html</location>
  </error-page>

  <!--当系统出现java.lang.NullPointerException，跳转到页面error.html-->
  <error-page>
    <exception-type>java.lang.NullPointerException</exception-type>
    <location>/WEB-INF/views/error/error.html</location>
  </error-page>

  <!--会话超时配置，单位分钟-->
  <session-config>
    <session-timeout>360</session-timeout>
  </session-config>

  <!--如果你的DispatcherServlet拦截"/"，为了实现REST风格，拦截了所有的请求，那么同时对*.js,*.jpg等静态文件的访问也就被拦截了。-->
  <!-- 方案一：激活Tomcat的defaultServlet来处理静态文件-->
  <!-- 方案二：要写在DispatcherServlet的前面，让defaultServlet先拦截请求，这样请求就不会进入Spring了 -->
  <!-- 方案三：当然，你也可以用 spring 拦截器完成这些 -->
  <servlet-mapping>
    <servlet-name>default</servlet-name>
    <url-pattern>*.css</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>default</servlet-name>
    <url-pattern>*.swf</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>default</servlet-name>
    <url-pattern>*.gif</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>default</servlet-name>
    <url-pattern>*.jpg</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>default</servlet-name>
    <url-pattern>*.png</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>default</servlet-name>
    <url-pattern>*.js</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>default</servlet-name>
    <url-pattern>*.html</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>default</servlet-name>
    <url-pattern>*.xml</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>default</servlet-name>
    <url-pattern>*.json</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>default</servlet-name>
    <url-pattern>*.map</url-pattern>
  </servlet-mapping>
</web-app>
